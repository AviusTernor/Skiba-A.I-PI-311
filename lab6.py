# -*- coding: utf-8 -*-
"""lab6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1r8-rpKlqtEIIstkZjhQF27Vgfr7wc1BH
"""

import math
import matplotlib.pyplot as plt


fahrenheit = [[-67.0], [-34.0], [0], [34.0], [54.0], [67.0], [100]]
kelvin = [[219], [236], [255], [274], [285], [292], [310]]

plt.figure(figsize = (15,8), dpi = 100)
plt.scatter(kelvin, fahrenheit, label = 'входные значениея', color = 'green', marker = '$f$');
plt.xlabel('kelvin')
plt.ylabel('fahrenheit')
plt.legend()
plt.grid(True)
plt.show()



import math

fahrenheit = [[-67.0], [-34.0], [0], [34.0], [54.0], [67.0], [100]]
kelvin = [[219], [236], [255], [274], [285], [292], [310]]

from sklearn.linear_model import LinearRegression
lr = LinearRegression()
lr.fit(kelvin, fahrenheit)
lr.predict([[256], [123]])
lr.coef_
lr.intercept_
kelvin_test = [[200], [231], [272], [222], [310], [215], [286]]
fahrenheit_test = lr.predict(kelvin_test)
fahrenheit_test

for c,f in zip(kelvin_test, fahrenheit_test):
  print(f'кельвины {c} фаренгейта {f}' )

import numpy as np
import math
import matplotlib.pyplot as plt

fahrenheit = [[-67.0], [-34.0], [0], [34.0], [54.0], [67.0], [100]]
kelvin = [[219], [236], [255], [274], [285], [292], [310]]


from sklearn.linear_model import LinearRegression
lr = LinearRegression()
lr.fit(kelvin, fahrenheit)
lr.predict([[256], [123]])
lr.coef_
lr.intercept_
kelvin_test = [[200], [231], [272], [222], [310], [215], [286]]
fahrenheit_test = lr.predict(kelvin_test)
fahrenheit_test

for c,f in zip(kelvin_test, fahrenheit_test):
  print(f'кельвины {c} фаренгейта {f}' )


x_range = np.arange(-70,120)
y_range = x_range*1.8+32

for c,f in zip(kelvin_test, fahrenheit_test):
  print(f'кельвины{c} фаренгейта {f}')

plt.figure(figsize = (15,8), dpi = 280)
plt.plot(x_range, y_range, label = 'уравнение', linewidth = '1')
plt.scatter(kelvin, fahrenheit, label ='входные данные', color = 'green')
plt.scatter(kelvin_test, fahrenheit_test, label =' предсказанное значение', color = 'blue')
plt.xlabel('Кельвины')
plt.ylabel('Фаренгейта')
plt.legend()
plt.grid(True)
plt.show()

# Skiba-A.I-PI-311
Repository dlya vvedenia v specialnost Alexey Serov

vals = [24, 17, 53, 21, 35]
labels = ["Ford", "Toyota", "BMW", "Audi", "Jaguar"]

plt.pie(vals, labels=labels)
plt.title("Распределение марок автомобилей на дороге")
plt.show()

x = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май']
y = [2, 4, 3, 1, 7]

plt.bar(x, y, label='Величина прибыли') #Параметр label позволяет задать название величины для легенды
plt.xlabel('Месяц года')
plt.ylabel('Прибыль, в млн руб.')
plt.title('Пример столбчатой диаграммы')
plt.legend()
plt.show()

x = [1, 2, 3, 4, 5]
y = [25, 32, 34, 20, 25]

plt.plot(x, y)
plt.show()

import math
print(math.e)
print(math.pi)
print(math.nan)

n = int(input())

factorial = 1
while n > 1:
  factorial *=n
  n-=1
print(factorial)

l = int (input('Введите номер'))
v = int (input('Введите память'))

if ( l > v):
  print(l)
if (v > l):
  print(v)